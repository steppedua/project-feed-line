plugins {
    id 'nu.studer.jooq' version '8.2'
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.steppedua'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    jooqGenerator 'org.postgresql:postgresql:42.5.1'
//    implementation 'org.testcontainers:testcontainers-jooq-codegen-maven-plugin:0.0.2'
//    testImplementation 'org.testcontainers:postgresql:1.18.3'
//    testImplementation "org.testcontainers:junit-jupiter:1.18.3"
//    testImplementation 'org.springframework.boot:spring-boot-testcontainers'

}

import org.jooq.meta.jaxb.Logging

jooq {
    configurations {
        main {
            generateSchemaSourceOnCompilation = true

            generationTool {
                logging = Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/test'
                    user = 'postgres'
                    password = 'postgres'
//                    properties {
//                        property {
//                            key = 'ssl'
//                            value = 'true'
//                        }
//                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'com.steppedua.userservice'
                        directory = 'build/generated/jooq'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
